Table: Sessions

+---------------------+---------+
| Column Name         | Type    |
+---------------------+---------+
| session_id          | int     |
| duration            | int     |
+---------------------+---------+
session_id is the primary key for this table.
duration is the time in seconds that a user has visited the application.
 

You want to know how long a user visits your application. You decided to create bins of "[0-5>", "[5-10>", "[10-15>", and "15 minutes or more" and count the number of sessions on it.

Write an SQL query to report the (bin, total).

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Sessions table:
+-------------+---------------+
| session_id  | duration      |
+-------------+---------------+
| 1           | 30            |
| 2           | 199           |
| 3           | 299           |
| 4           | 580           |
| 5           | 1000          |
+-------------+---------------+
Output: 
+--------------+--------------+
| bin          | total        |
+--------------+--------------+
| [0-5>        | 3            |
| [5-10>       | 1            |
| [10-15>      | 0            |
| 15 or more   | 1            |
+--------------+--------------+
Explanation: 
For session_id 1, 2, and 3 have a duration greater or equal than 0 minutes and less than 5 minutes.
For session_id 4 has a duration greater or equal than 5 minutes and less than 10 minutes.
There is no session with a duration greater than or equal to 10 minutes and less than 15 minutes.
For session_id 5 has a duration greater than or equal to 15 minutes.


-- 要考虑count=0的情况：用coalesce(,0), left join一个只用bin的table

# Write your MySQL query statement below
with cte1 AS(
SELECT '[0-5>' as bin
union
SELECT '[5-10>'
union
SELECT '[10-15>'
union
SELECT '15 or more'),

cte2 as(
select
    (case when duration<300 then '[0-5>'
        when duration>=300 and duration<600 then '[5-10>'
        when duration >=600 and duration<900 then '[10-15>'
        else '15 or more' end) as bin, 
    session_id
FROM sessions)

select cte1.bin, coalesce(count(cte2.session_id),0) as total
from cte1
LEFT JOIN cte2
    on cte1.bin=cte2.bin
group by cte1.bin
